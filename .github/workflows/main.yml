name: Compare results

on:
  push:
    paths:
      - 'data/*'

env:
  TRACKED_JSON_PATH: './data'
  #GITHUB_TEAM: 'chocoteam'
  #WEBSITE_REPO: 'website'
  #WEBSITE_BRANCH: 'master'
  GITHUB_TEAM: 'RemiBardon'
  WEBSITE_REPO: 'chocoteam-website'
  WEBSITE_BRANCH: 'master'
  OUTPUT_PATH: 'content/en/docs/Benchmarks'
  COMMITTER_NAME: 'Performance Action'
  COMMITTER_EMAIL: 'performance-action@choco-solver.org'
  COMMIT_MESSAGE: 'ðŸš€ Results of performance action'
  #API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
  # Hard-coded token for tests (will be deleted)
  # Technique de charlatan
  API_TOKEN_GITHUB_1: p_Z8NAlZNrJa
  API_TOKEN_GITHUB_2: eNHj3K024fU09EEXbDqx2wXEgr

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "compare"
  compare:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Clones the website repository
      # Note: Name must not conflict with folders in this repository
      - name: Clone website repository
        run: git clone https://x-access-token:gh$API_TOKEN_GITHUB_1$API_TOKEN_GITHUB_2@github.com/$GITHUB_TEAM/$WEBSITE_REPO

      # Sets up Python
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # Runs the Python script for this action
      # Compares current version with previous modification of TRACKED_JSON_PATH
      - name: Compare results
        env:
          REL_OUTPUT_PATH: ${{ env.WEBSITE_REPO }}/${{ env.OUTPUT_PATH }}
        run: |
          COMMIT_REF=$(git log -n 1 --skip 1 --pretty=format:%H ${TRACKED_JSON_PATH})
          COMMIT_COMP=$GITHUB_SHA
          python ./src/action.py $COMMIT_REF $COMMIT_COMP -d $TRACKED_JSON_PATH -o $REL_OUTPUT_PATH
          # cat $REL_OUTPUT_PATH/*.md # Print files for debug purposes

      # Pushes the created files
      - name: Push file to website repository
        run: |
          cd $WEBSITE_REPO
          git add $OUTPUT_PATH
          git config --global user.name "$COMMITTER_NAME"
          git config --global user.email "$COMMITTER_EMAIL"
          git commit -m "$COMMIT_MESSAGE (\`$GITHUB_RUN_ID\`)"
          git push origin $WEBSITE_BRANCH
